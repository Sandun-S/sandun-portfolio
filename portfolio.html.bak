<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Portfolio | Sandun Siwantha</title>
    <link rel="stylesheet" href="assets/css/style.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&family=Roboto+Mono:wght@400;500&display=swap" rel="stylesheet">
</head>
<body>

    <header id="main-header"></header>

    <main>
        <section class="page-header">
            <div class="container">
                <h1>Portfolio</h1>
                <p>A collection of my key projects and case studies.</p>
            </div>
        </section>

        <section class="content-section">
            <div class="container">
                <div id="portfolio-filter" class="portfolio-filter">
                    <button class="filter-btn active" data-filter="all">All</button>
                    <button class="filter-btn" data-filter="IoT">IoT</button>
                    <button class="filter-btn" data-filter="Firmware">Firmware</button>
                    <button class="filter-btn" data-filter="PCB Design">PCB Design</button>
                    <button class="filter-btn" data-filter="Automation">Automation</button>
                </div>

                <div id="portfolio-grid" class="projects-grid">
                    <!-- Projects will be loaded here by JavaScript -->
                    <div class="spinner-container"><div class="spinner"></div></div>
                </div>
            </div>
        </section>
    </main>

    <footer id="main-footer"></footer>

    <script src="assets/js/main.js"></script>
    <script src="assets/js/animations.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
        const grid = document.getElementById('portfolio-grid');
        const filterContainer = document.getElementById('portfolio-filter');
        let allProjects = [];

        // Fetch project data
        fetch('assets/data/projects.json')
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                allProjects = data.projects;
                displayProjects('all');
            })
            .catch(error => {
                grid.innerHTML = '<p class="error-message">Could not load projects. Please try again later.</p>';
                console.error('Error fetching projects:', error);
            });

        // Function to display projects safely
        function displayProjects(filter) {
            grid.innerHTML = ''; // Clear previous projects
            const filteredProjects = filter === 'all' 
                ? allProjects 
                : allProjects.filter(p => p.category === filter);

            if (filteredProjects.length === 0) {
                grid.innerHTML = '<p class="info-message">No projects found in this category.</p>';
                return;
            }
            
            filteredProjects.forEach(project => {
                // Create elements safely
                const cardLink = document.createElement('a');
                cardLink.href = `project-detail.html?id=${project.id}`;
                cardLink.className = 'project-card fade-in';

                const image = document.createElement('img');
                image.src = project.thumbnailUrl;
                image.alt = project.title;

                const contentDiv = document.createElement('div');
                contentDiv.className = 'project-card-content';

                const categorySpan = document.createElement('span');
                categorySpan.className = 'project-category';
                categorySpan.textContent = project.category;

                const titleH3 = document.createElement('h3');
                titleH3.textContent = project.title;

                const summaryP = document.createElement('p');
                summaryP.textContent = project.summary;

                // Assemble the card
                contentDiv.appendChild(categorySpan);
                contentDiv.appendChild(titleH3);
                contentDiv.appendChild(summaryP);
                
                cardLink.appendChild(image);
                cardLink.appendChild(contentDiv);
                
                grid.appendChild(cardLink);
            });
        }

        // Event listener for filter buttons
        filterContainer.addEventListener('click', (e) => {
            if (e.target.classList.contains('filter-btn')) {
                filterContainer.querySelector('.active').classList.remove('active');
                e.target.classList.add('active');
                
                const filterValue = e.target.getAttribute('data-filter');
                displayProjects(filterValue);
            }
        });
    });
        // document.addEventListener('DOMContentLoaded', () => {
        //     const grid = document.getElementById('portfolio-grid');
        //     const filterContainer = document.getElementById('portfolio-filter');
        //     let allProjects = [];

        //     // Fetch project data
        //     fetch('assets/data/projects.json')
        //         .then(response => response.json())
        //         .then(data => {
        //             allProjects = data.projects;
        //             displayProjects('all');
        //         })
        //         .catch(error => {
        //             grid.innerHTML = '<p class="error-message">Could not load projects. Please try again later.</p>';
        //             console.error('Error fetching projects:', error);
        //         });

        //     // Function to display projects
        //     function displayProjects(filter) {
        //         grid.innerHTML = '';
        //         const filteredProjects = filter === 'all' 
        //             ? allProjects 
        //             : allProjects.filter(p => p.category === filter);

        //         if (filteredProjects.length === 0) {
        //             grid.innerHTML = '<p class="info-message">No projects found in this category.</p>';
        //             return;
        //         }
                
        //         filteredProjects.forEach(project => {
        //             const projectCard = document.createElement('a');
        //             projectCard.href = `project-detail.html?id=${project.id}`;
        //             projectCard.className = 'project-card fade-in';
        //             projectCard.innerHTML = `
        //                 <img src="${project.thumbnailUrl}" alt="${project.title}">
        //                 <div class="project-card-content">
        //                     <span class="project-category">${project.category}</span>
        //                     <h3>${project.title}</h3>
        //                     <p>${project.summary}</p>
        //                 </div>
        //             `;
        //             grid.appendChild(projectCard);
        //         });
        //     }

        //     // Event listener for filter buttons
        //     filterContainer.addEventListener('click', (e) => {
        //         if (e.target.classList.contains('filter-btn')) {
        //             // Update active button state
        //             filterContainer.querySelector('.active').classList.remove('active');
        //             e.target.classList.add('active');
                    
        //             const filterValue = e.target.getAttribute('data-filter');
        //             displayProjects(filterValue);
        //         }
        //     });
        // });
    </script>
</body>
</html>
